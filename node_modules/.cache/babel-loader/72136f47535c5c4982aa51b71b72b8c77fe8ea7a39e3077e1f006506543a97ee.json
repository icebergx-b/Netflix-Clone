{"ast":null,"code":"var _jsxFileName = \"/Users/priyanshupanda/Desktop/netflix-clean/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport Section from \"./components/Section\";\nimport HeroSection from \"./components/HeroSection\";\nimport NavBar from \"./components/NavBar\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const genreIncrement = 4;\n  const [genres, setGenres] = useState(null);\n  const [limit, setLimit] = useState(genreIncrement);\n  const fetchData = async () => {\n    const response = await fetch(\"/.netlify/functions/getGenres\", {\n      method: \"POST\",\n      body: limit\n    });\n    const responseBody = await response.json();\n    setGenres(responseBody.data.reference_list.values);\n  };\n  useEffect(() => {\n    fetchData();\n  }, [limit]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HeroSection, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), genres && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: Object.values(genres).map((genre, index) => /*#__PURE__*/_jsxDEV(Section, {\n        genre: genre.value\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-end\",\n      onMouseEnter: () => {\n        setLimit(limit + genreIncrement);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"qA5jmrr7aLzpdpC/PygRPiMD1C8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Section","HeroSection","NavBar","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","genreIncrement","genres","setGenres","limit","setLimit","fetchData","response","fetch","method","body","responseBody","json","data","reference_list","values","children","fileName","_jsxFileName","lineNumber","columnNumber","className","Object","map","genre","index","value","onMouseEnter","_c","$RefreshReg$"],"sources":["/Users/priyanshupanda/Desktop/netflix-clean/src/App.js"],"sourcesContent":["import \"./App.css\"\nimport { useEffect, useState } from \"react\"\nimport Section from \"./components/Section\"\nimport HeroSection from \"./components/HeroSection\"\nimport NavBar from \"./components/NavBar\"\n\nconst App = () => {\n  const genreIncrement = 4\n  const [genres, setGenres] = useState(null)\n  const [limit, setLimit] = useState(genreIncrement)\n\n  const fetchData = async () => {\n    const response = await fetch(\"/.netlify/functions/getGenres\", {\n      method: \"POST\",\n      body: limit,\n    })\n    const responseBody = await response.json()\n    setGenres(responseBody.data.reference_list.values)\n  }\n\n  useEffect(() => {\n    fetchData()\n  }, [limit])\n\n  return (\n    <>\n      <NavBar />\n      <HeroSection />\n      {genres && (\n        <div className=\"container\">\n          {Object.values(genres).map((genre, index) => (\n            <Section key={index} genre={genre.value} />\n          ))}\n        </div>\n      )}\n      <div\n        className=\"page-end\"\n        onMouseEnter={() => {\n          setLimit(limit + genreIncrement)\n        }}\n      />\n    </>\n  )\n}\n\nexport default App\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,MAAM,MAAM,qBAAqB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMC,cAAc,GAAG,CAAC;EACxB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAACU,cAAc,CAAC;EAElD,MAAMK,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;MAC5DC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEN;IACR,CAAC,CAAC;IACF,MAAMO,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAC1CT,SAAS,CAACQ,YAAY,CAACE,IAAI,CAACC,cAAc,CAACC,MAAM,CAAC;EACpD,CAAC;EAEDzB,SAAS,CAAC,MAAM;IACdgB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACF,KAAK,CAAC,CAAC;EAEX,oBACER,OAAA,CAAAE,SAAA;IAAAkB,QAAA,gBACEpB,OAAA,CAACF,MAAM;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVxB,OAAA,CAACH,WAAW;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACdlB,MAAM,iBACLN,OAAA;MAAKyB,SAAS,EAAC,WAAW;MAAAL,QAAA,EACvBM,MAAM,CAACP,MAAM,CAACb,MAAM,CAAC,CAACqB,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACtC7B,OAAA,CAACJ,OAAO;QAAagC,KAAK,EAAEA,KAAK,CAACE;MAAM,GAA1BD,KAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAuB,CAC3C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN,eACDxB,OAAA;MACEyB,SAAS,EAAC,UAAU;MACpBM,YAAY,EAAEA,CAAA,KAAM;QAClBtB,QAAQ,CAACD,KAAK,GAAGH,cAAc,CAAC;MAClC;IAAE;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA,eACF,CAAC;AAEP,CAAC;AAAApB,EAAA,CArCKD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AAuCT,eAAeA,GAAG;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}