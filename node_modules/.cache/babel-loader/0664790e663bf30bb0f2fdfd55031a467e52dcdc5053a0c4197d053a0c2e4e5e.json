{"ast":null,"code":"var _jsxFileName = \"/Users/priyanshupanda/Desktop/netflix-clean/src/components/Section.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Card from \"./Card\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Section = ({\n  genre\n}) => {\n  _s();\n  const [movies, setMovies] = useState(null);\n  const [pageState, setPageState] = useState(null);\n  const fetchData = async () => {\n    const response = await fetch(\"/.netlify/functions/getMovies\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        genre: genre,\n        pageState: pageState\n      })\n    });\n    const responseBody = await response.json();\n    setMovies(responseBody.data.movies_by_genre.values);\n    setPageState(responseBody.data.movies_by_genre.pageState);\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      id: genre,\n      children: genre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), movies && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-section\",\n      children: [movies.map((movie, index) => /*#__PURE__*/_jsxDEV(Card, {\n        movie: movie\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"more-button\",\n        onClick: () => {\n          setPageState(pageState);\n          fetchData();\n        },\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-angle-right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Section, \"ANH5Xz1b0hCrD9BGku8mv1Zdphw=\");\n_c = Section;\nexport default Section;\nvar _c;\n$RefreshReg$(_c, \"Section\");","map":{"version":3,"names":["useEffect","useState","Card","jsxDEV","_jsxDEV","Fragment","_Fragment","Section","genre","_s","movies","setMovies","pageState","setPageState","fetchData","response","fetch","method","body","JSON","stringify","responseBody","json","data","movies_by_genre","values","children","id","fileName","_jsxFileName","lineNumber","columnNumber","className","map","movie","index","onClick","_c","$RefreshReg$"],"sources":["/Users/priyanshupanda/Desktop/netflix-clean/src/components/Section.js"],"sourcesContent":["import { useEffect, useState } from \"react\"\nimport Card from \"./Card\"\n\nconst Section = ({ genre }) => {\n  const [movies, setMovies] = useState(null)\n  const [pageState, setPageState] = useState(null)\n\n  const fetchData = async () => {\n    const response = await fetch(\"/.netlify/functions/getMovies\", {\n      method: \"POST\",\n      body: JSON.stringify({ genre: genre, pageState: pageState }),\n    })\n    const responseBody = await response.json()\n    setMovies(responseBody.data.movies_by_genre.values)\n    setPageState(responseBody.data.movies_by_genre.pageState)\n  }\n\n  useEffect(() => {\n    fetchData()\n  }, [])\n\n  return (\n    <>\n      <h2 id={genre}>{genre}</h2>\n      {movies && (\n        <div className=\"movie-section\">\n          {movies.map((movie, index) => (\n            <Card key={index} movie={movie} />\n          ))}\n          <div\n            className=\"more-button\"\n            onClick={() => {\n              setPageState(pageState)\n              fetchData()\n            }}\n          >\n            <i className=\"fas fa-angle-right\"></i>\n          </div>\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default Section\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,IAAI,MAAM,QAAQ;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEzB,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC7B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAEhD,MAAMa,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;MAC5DC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEZ,KAAK,EAAEA,KAAK;QAAEI,SAAS,EAAEA;MAAU,CAAC;IAC7D,CAAC,CAAC;IACF,MAAMS,YAAY,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;IAC1CX,SAAS,CAACU,YAAY,CAACE,IAAI,CAACC,eAAe,CAACC,MAAM,CAAC;IACnDZ,YAAY,CAACQ,YAAY,CAACE,IAAI,CAACC,eAAe,CAACZ,SAAS,CAAC;EAC3D,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACdc,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEV,OAAA,CAAAE,SAAA;IAAAoB,QAAA,gBACEtB,OAAA;MAAIuB,EAAE,EAAEnB,KAAM;MAAAkB,QAAA,EAAElB;IAAK;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAC1BrB,MAAM,iBACLN,OAAA;MAAK4B,SAAS,EAAC,eAAe;MAAAN,QAAA,GAC3BhB,MAAM,CAACuB,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACvB/B,OAAA,CAACF,IAAI;QAAagC,KAAK,EAAEA;MAAM,GAApBC,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAClC,CAAC,eACF3B,OAAA;QACE4B,SAAS,EAAC,aAAa;QACvBI,OAAO,EAAEA,CAAA,KAAM;UACbvB,YAAY,CAACD,SAAS,CAAC;UACvBE,SAAS,CAAC,CAAC;QACb,CAAE;QAAAY,QAAA,eAEFtB,OAAA;UAAG4B,SAAS,EAAC;QAAoB;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA,eACD,CAAC;AAEP,CAAC;AAAAtB,EAAA,CAvCKF,OAAO;AAAA8B,EAAA,GAAP9B,OAAO;AAyCb,eAAeA,OAAO;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}